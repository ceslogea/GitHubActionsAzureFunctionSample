name: Create Release Branch
on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Number of version  (ie 5.5.0.1)'
        required: true
        
env:
  AZURE_FUNCTIONAPP_NAME: AzureFunctionAppVsExtention  # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1'              # set this to the dotnet version to use

jobs:
  createrelease:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Create release branch
      run: git checkout -b release/${{ github.event.inputs.versionName }}
    - name: Initialize mandatory git config
      run: |
       git config user.name "GitHub Actions"
       git config user.email noreply@github.com
    - name: Change version number and name
      run: printf 'ext.version_code = next.version_name = "${{ github.event.inputs.versionName }}"\n' > app_versions.gradle
    #- name: Create Changelogs
      # You may pin to the exact commit or the version.
      # uses: heineiuo/create-changelogs@49aa3f7303691733d4425e9e04a41bb409c44826
    #  uses: heineiuo/create-changelogs@v0.2.8
    - name: Commit changelog and manifest files
      id: make-commit
      run: |
        git add app_versions.gradle
        git add CHANGELOG.md
        git commit --message "Prepare release ${{ github.event.inputs.versionName }}"
        echo "::set-output name=commit::$(git rev-parse HEAD)"
    - name: Push new branch
      run: git push origin release/${{ github.event.inputs.versionName }}
      
   #Build and deploy
    - name: Check out code
      uses: actions/checkout@v2
      with:
        ref: 'release/${{ github.event.inputs.versionName }}'
    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
